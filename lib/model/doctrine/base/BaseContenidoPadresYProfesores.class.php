<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ContenidoPadresYProfesores', 'doctrine');

/**
 * BaseContenidoPadresYProfesores
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idEpisodio
 * @property string $titulo
 * @property text $contenido
 * @property text $enlaceVideo
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property Episodio $Episodio
 * @property Doctrine_Collection $FotografiaContenidoPadresYProfesores
 * @property Doctrine_Collection $VideoContenidoPadresYProfesores
 * 
 * @method integer                    getIdEpisodio()                           Returns the current record's "idEpisodio" value
 * @method string                     getTitulo()                               Returns the current record's "titulo" value
 * @method text                       getContenido()                            Returns the current record's "contenido" value
 * @method text                       getEnlaceVideo()                          Returns the current record's "enlaceVideo" value
 * @method boolean                    getSoloAccesoPremium()                    Returns the current record's "soloAccesoPremium" value
 * @method boolean                    getSoloAccesoLogado()                     Returns the current record's "soloAccesoLogado" value
 * @method boolean                    getBorrado()                              Returns the current record's "borrado" value
 * @method boolean                    getActivo()                               Returns the current record's "activo" value
 * @method Episodio                   getEpisodio()                             Returns the current record's "Episodio" value
 * @method Doctrine_Collection        getFotografiaContenidoPadresYProfesores() Returns the current record's "FotografiaContenidoPadresYProfesores" collection
 * @method Doctrine_Collection        getVideoContenidoPadresYProfesores()      Returns the current record's "VideoContenidoPadresYProfesores" collection
 * @method ContenidoPadresYProfesores setIdEpisodio()                           Sets the current record's "idEpisodio" value
 * @method ContenidoPadresYProfesores setTitulo()                               Sets the current record's "titulo" value
 * @method ContenidoPadresYProfesores setContenido()                            Sets the current record's "contenido" value
 * @method ContenidoPadresYProfesores setEnlaceVideo()                          Sets the current record's "enlaceVideo" value
 * @method ContenidoPadresYProfesores setSoloAccesoPremium()                    Sets the current record's "soloAccesoPremium" value
 * @method ContenidoPadresYProfesores setSoloAccesoLogado()                     Sets the current record's "soloAccesoLogado" value
 * @method ContenidoPadresYProfesores setBorrado()                              Sets the current record's "borrado" value
 * @method ContenidoPadresYProfesores setActivo()                               Sets the current record's "activo" value
 * @method ContenidoPadresYProfesores setEpisodio()                             Sets the current record's "Episodio" value
 * @method ContenidoPadresYProfesores setFotografiaContenidoPadresYProfesores() Sets the current record's "FotografiaContenidoPadresYProfesores" collection
 * @method ContenidoPadresYProfesores setVideoContenidoPadresYProfesores()      Sets the current record's "VideoContenidoPadresYProfesores" collection
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContenidoPadresYProfesores extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contenidoPadresYProfesores');
        $this->hasColumn('idEpisodio', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('titulo', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('contenido', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('enlaceVideo', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Episodio', array(
             'local' => 'idEpisodio',
             'foreign' => 'id'));

        $this->hasMany('FotografiaContenidoPadresYProfesores', array(
             'local' => 'id',
             'foreign' => 'idContenidoPadresYProfesores'));

        $this->hasMany('VideoContenidoPadresYProfesores', array(
             'local' => 'id',
             'foreign' => 'idContenidoPadresYProfesores'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}