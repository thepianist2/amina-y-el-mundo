<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Producto', 'doctrine');

/**
 * BaseProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nombre
 * @property text $descripcion
 * @property string $precio
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property Doctrine_Collection $FotografiaProducto
 * 
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method text                getDescripcion()        Returns the current record's "descripcion" value
 * @method string              getPrecio()             Returns the current record's "precio" value
 * @method boolean             getSoloAccesoPremium()  Returns the current record's "soloAccesoPremium" value
 * @method boolean             getSoloAccesoLogado()   Returns the current record's "soloAccesoLogado" value
 * @method boolean             getBorrado()            Returns the current record's "borrado" value
 * @method boolean             getActivo()             Returns the current record's "activo" value
 * @method Doctrine_Collection getFotografiaProducto() Returns the current record's "FotografiaProducto" collection
 * @method Producto            setNombre()             Sets the current record's "nombre" value
 * @method Producto            setDescripcion()        Sets the current record's "descripcion" value
 * @method Producto            setPrecio()             Sets the current record's "precio" value
 * @method Producto            setSoloAccesoPremium()  Sets the current record's "soloAccesoPremium" value
 * @method Producto            setSoloAccesoLogado()   Sets the current record's "soloAccesoLogado" value
 * @method Producto            setBorrado()            Sets the current record's "borrado" value
 * @method Producto            setActivo()             Sets the current record's "activo" value
 * @method Producto            setFotografiaProducto() Sets the current record's "FotografiaProducto" collection
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto');
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('precio', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('FotografiaProducto', array(
             'local' => 'id',
             'foreign' => 'idProducto'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}