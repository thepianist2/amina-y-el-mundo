<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FotografiaContenidoPadresYProfesores', 'doctrine');

/**
 * BaseFotografiaContenidoPadresYProfesores
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idContenidoPadresYProfesores
 * @property text $descripcion
 * @property string $fotografia
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property ContenidoPadresYProfesores $ContenidoPadresYProfesores
 * 
 * @method integer                              getIdContenidoPadresYProfesores() Returns the current record's "idContenidoPadresYProfesores" value
 * @method text                                 getDescripcion()                  Returns the current record's "descripcion" value
 * @method string                               getFotografia()                   Returns the current record's "fotografia" value
 * @method boolean                              getSoloAccesoPremium()            Returns the current record's "soloAccesoPremium" value
 * @method boolean                              getSoloAccesoLogado()             Returns the current record's "soloAccesoLogado" value
 * @method boolean                              getBorrado()                      Returns the current record's "borrado" value
 * @method boolean                              getActivo()                       Returns the current record's "activo" value
 * @method ContenidoPadresYProfesores           getContenidoPadresYProfesores()   Returns the current record's "ContenidoPadresYProfesores" value
 * @method FotografiaContenidoPadresYProfesores setIdContenidoPadresYProfesores() Sets the current record's "idContenidoPadresYProfesores" value
 * @method FotografiaContenidoPadresYProfesores setDescripcion()                  Sets the current record's "descripcion" value
 * @method FotografiaContenidoPadresYProfesores setFotografia()                   Sets the current record's "fotografia" value
 * @method FotografiaContenidoPadresYProfesores setSoloAccesoPremium()            Sets the current record's "soloAccesoPremium" value
 * @method FotografiaContenidoPadresYProfesores setSoloAccesoLogado()             Sets the current record's "soloAccesoLogado" value
 * @method FotografiaContenidoPadresYProfesores setBorrado()                      Sets the current record's "borrado" value
 * @method FotografiaContenidoPadresYProfesores setActivo()                       Sets the current record's "activo" value
 * @method FotografiaContenidoPadresYProfesores setContenidoPadresYProfesores()   Sets the current record's "ContenidoPadresYProfesores" value
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFotografiaContenidoPadresYProfesores extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fotografiaContenidoPadresYProfesores');
        $this->hasColumn('idContenidoPadresYProfesores', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fotografia', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ContenidoPadresYProfesores', array(
             'local' => 'idContenidoPadresYProfesores',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}