<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UnidadTematica', 'doctrine');

/**
 * BaseUnidadTematica
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idUsuario
 * @property string $titulo
 * @property text $descripcion
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Episodio
 * @property Doctrine_Collection $Comentario
 * 
 * @method integer             getIdUsuario()         Returns the current record's "idUsuario" value
 * @method string              getTitulo()            Returns the current record's "titulo" value
 * @method text                getDescripcion()       Returns the current record's "descripcion" value
 * @method boolean             getSoloAccesoPremium() Returns the current record's "soloAccesoPremium" value
 * @method boolean             getSoloAccesoLogado()  Returns the current record's "soloAccesoLogado" value
 * @method boolean             getBorrado()           Returns the current record's "borrado" value
 * @method boolean             getActivo()            Returns the current record's "activo" value
 * @method sfGuardUser         getSfGuardUser()       Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getEpisodio()          Returns the current record's "Episodio" collection
 * @method Doctrine_Collection getComentario()        Returns the current record's "Comentario" collection
 * @method UnidadTematica      setIdUsuario()         Sets the current record's "idUsuario" value
 * @method UnidadTematica      setTitulo()            Sets the current record's "titulo" value
 * @method UnidadTematica      setDescripcion()       Sets the current record's "descripcion" value
 * @method UnidadTematica      setSoloAccesoPremium() Sets the current record's "soloAccesoPremium" value
 * @method UnidadTematica      setSoloAccesoLogado()  Sets the current record's "soloAccesoLogado" value
 * @method UnidadTematica      setBorrado()           Sets the current record's "borrado" value
 * @method UnidadTematica      setActivo()            Sets the current record's "activo" value
 * @method UnidadTematica      setSfGuardUser()       Sets the current record's "sfGuardUser" value
 * @method UnidadTematica      setEpisodio()          Sets the current record's "Episodio" collection
 * @method UnidadTematica      setComentario()        Sets the current record's "Comentario" collection
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUnidadTematica extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('unidadTematica');
        $this->hasColumn('idUsuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('titulo', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'idUsuario',
             'foreign' => 'id'));

        $this->hasMany('Episodio', array(
             'local' => 'id',
             'foreign' => 'idUnidadTematica'));

        $this->hasMany('Comentario', array(
             'local' => 'id',
             'foreign' => 'idUnidadTematica'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}