<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ElExperto', 'doctrine');

/**
 * BaseElExperto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idEpisodio
 * @property text $enlaceVideo
 * @property text $descripcion
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property Episodio $Episodio
 * 
 * @method integer   getIdEpisodio()        Returns the current record's "idEpisodio" value
 * @method text      getEnlaceVideo()       Returns the current record's "enlaceVideo" value
 * @method text      getDescripcion()       Returns the current record's "descripcion" value
 * @method boolean   getSoloAccesoPremium() Returns the current record's "soloAccesoPremium" value
 * @method boolean   getSoloAccesoLogado()  Returns the current record's "soloAccesoLogado" value
 * @method boolean   getBorrado()           Returns the current record's "borrado" value
 * @method boolean   getActivo()            Returns the current record's "activo" value
 * @method Episodio  getEpisodio()          Returns the current record's "Episodio" value
 * @method ElExperto setIdEpisodio()        Sets the current record's "idEpisodio" value
 * @method ElExperto setEnlaceVideo()       Sets the current record's "enlaceVideo" value
 * @method ElExperto setDescripcion()       Sets the current record's "descripcion" value
 * @method ElExperto setSoloAccesoPremium() Sets the current record's "soloAccesoPremium" value
 * @method ElExperto setSoloAccesoLogado()  Sets the current record's "soloAccesoLogado" value
 * @method ElExperto setBorrado()           Sets the current record's "borrado" value
 * @method ElExperto setActivo()            Sets the current record's "activo" value
 * @method ElExperto setEpisodio()          Sets the current record's "Episodio" value
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseElExperto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('elExperto');
        $this->hasColumn('idEpisodio', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('enlaceVideo', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Episodio', array(
             'local' => 'idEpisodio',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}