<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FotografiaCapitulo', 'doctrine');

/**
 * BaseFotografiaCapitulo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idCapitulo
 * @property text $descripcion
 * @property string $fotografia
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property Capitulo $Capitulo
 * 
 * @method integer            getIdCapitulo()        Returns the current record's "idCapitulo" value
 * @method text               getDescripcion()       Returns the current record's "descripcion" value
 * @method string             getFotografia()        Returns the current record's "fotografia" value
 * @method boolean            getSoloAccesoPremium() Returns the current record's "soloAccesoPremium" value
 * @method boolean            getSoloAccesoLogado()  Returns the current record's "soloAccesoLogado" value
 * @method boolean            getBorrado()           Returns the current record's "borrado" value
 * @method boolean            getActivo()            Returns the current record's "activo" value
 * @method Capitulo           getCapitulo()          Returns the current record's "Capitulo" value
 * @method FotografiaCapitulo setIdCapitulo()        Sets the current record's "idCapitulo" value
 * @method FotografiaCapitulo setDescripcion()       Sets the current record's "descripcion" value
 * @method FotografiaCapitulo setFotografia()        Sets the current record's "fotografia" value
 * @method FotografiaCapitulo setSoloAccesoPremium() Sets the current record's "soloAccesoPremium" value
 * @method FotografiaCapitulo setSoloAccesoLogado()  Sets the current record's "soloAccesoLogado" value
 * @method FotografiaCapitulo setBorrado()           Sets the current record's "borrado" value
 * @method FotografiaCapitulo setActivo()            Sets the current record's "activo" value
 * @method FotografiaCapitulo setCapitulo()          Sets the current record's "Capitulo" value
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFotografiaCapitulo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fotografiaCapitulo');
        $this->hasColumn('idCapitulo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fotografia', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Capitulo', array(
             'local' => 'idCapitulo',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}