<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comentario', 'doctrine');

/**
 * BaseComentario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idUsuario
 * @property integer $idUnidadTematica
 * @property text $publicacion
 * @property string $archivo
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property sfGuardUser $sfGuardUser
 * @property UnidadTematica $UnidadTematica
 * 
 * @method integer        getIdUsuario()         Returns the current record's "idUsuario" value
 * @method integer        getIdUnidadTematica()  Returns the current record's "idUnidadTematica" value
 * @method text           getPublicacion()       Returns the current record's "publicacion" value
 * @method string         getArchivo()           Returns the current record's "archivo" value
 * @method boolean        getSoloAccesoPremium() Returns the current record's "soloAccesoPremium" value
 * @method boolean        getSoloAccesoLogado()  Returns the current record's "soloAccesoLogado" value
 * @method boolean        getBorrado()           Returns the current record's "borrado" value
 * @method boolean        getActivo()            Returns the current record's "activo" value
 * @method sfGuardUser    getSfGuardUser()       Returns the current record's "sfGuardUser" value
 * @method UnidadTematica getUnidadTematica()    Returns the current record's "UnidadTematica" value
 * @method Comentario     setIdUsuario()         Sets the current record's "idUsuario" value
 * @method Comentario     setIdUnidadTematica()  Sets the current record's "idUnidadTematica" value
 * @method Comentario     setPublicacion()       Sets the current record's "publicacion" value
 * @method Comentario     setArchivo()           Sets the current record's "archivo" value
 * @method Comentario     setSoloAccesoPremium() Sets the current record's "soloAccesoPremium" value
 * @method Comentario     setSoloAccesoLogado()  Sets the current record's "soloAccesoLogado" value
 * @method Comentario     setBorrado()           Sets the current record's "borrado" value
 * @method Comentario     setActivo()            Sets the current record's "activo" value
 * @method Comentario     setSfGuardUser()       Sets the current record's "sfGuardUser" value
 * @method Comentario     setUnidadTematica()    Sets the current record's "UnidadTematica" value
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComentario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comentario');
        $this->hasColumn('idUsuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('idUnidadTematica', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('publicacion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('archivo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'idUsuario',
             'foreign' => 'id'));

        $this->hasOne('UnidadTematica', array(
             'local' => 'idUnidadTematica',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}