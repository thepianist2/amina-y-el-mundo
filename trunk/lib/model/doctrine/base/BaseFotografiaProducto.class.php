<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FotografiaProducto', 'doctrine');

/**
 * BaseFotografiaProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idProducto
 * @property text $descripcion
 * @property string $fotografia
 * @property boolean $soloAccesoPremium
 * @property boolean $soloAccesoLogado
 * @property boolean $borrado
 * @property boolean $activo
 * @property Producto $Producto
 * 
 * @method integer            getIdProducto()        Returns the current record's "idProducto" value
 * @method text               getDescripcion()       Returns the current record's "descripcion" value
 * @method string             getFotografia()        Returns the current record's "fotografia" value
 * @method boolean            getSoloAccesoPremium() Returns the current record's "soloAccesoPremium" value
 * @method boolean            getSoloAccesoLogado()  Returns the current record's "soloAccesoLogado" value
 * @method boolean            getBorrado()           Returns the current record's "borrado" value
 * @method boolean            getActivo()            Returns the current record's "activo" value
 * @method Producto           getProducto()          Returns the current record's "Producto" value
 * @method FotografiaProducto setIdProducto()        Sets the current record's "idProducto" value
 * @method FotografiaProducto setDescripcion()       Sets the current record's "descripcion" value
 * @method FotografiaProducto setFotografia()        Sets the current record's "fotografia" value
 * @method FotografiaProducto setSoloAccesoPremium() Sets the current record's "soloAccesoPremium" value
 * @method FotografiaProducto setSoloAccesoLogado()  Sets the current record's "soloAccesoLogado" value
 * @method FotografiaProducto setBorrado()           Sets the current record's "borrado" value
 * @method FotografiaProducto setActivo()            Sets the current record's "activo" value
 * @method FotografiaProducto setProducto()          Sets the current record's "Producto" value
 * 
 * @package    amina
 * @subpackage model
 * @author     Allel software
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFotografiaProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fotografiaProducto');
        $this->hasColumn('idProducto', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fotografia', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('soloAccesoPremium', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('soloAccesoLogado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '1',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'idProducto',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}